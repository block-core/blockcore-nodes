name: Build and Release Docker Image

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and Push

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        chain: ['AMS','BTC','CITY','IMPL', 'STRAT', 'XDS', 'XLR', 'X42']
        include:
          - chain: AMS
            name: "ams"
            assembly: "AMS.Node.dll"
            ports: "50000 51000 63000"
          - chain: BTC
            name: "btc"
            assembly: "Bitcoin.Node.dll"
            ports: "8332 8333 37220"
          - chain: CITY
            name: "city"
            assembly: "City.Node.dll"
            ports: "4333 4334 4335"
          - chain: IMPL
            name: "impl"
            assembly: "Impleum.Node.dll"
            ports: "16171 16172 38222"
          - chain: STRAT
            name: "strat"
            assembly: "Stratis.Node.dll"
            ports: "16178 16174 37221"
          - chain: XDS
            name: "xds"
            assembly: "blockcore.xdsd.dll"
            ports: "38333 48333 48334"
          - chain: XLR
            name: "xlr"
            assembly: "Solaris.Node.dll"
            ports: "60000 61000 62000"
          - chain: X42
            name: "x42"
            assembly: "X42.Node.dll"
            ports: "52342 52343 42220"

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master

      - name: Log Variables
        run: |
          echo "action - ${{ github.event.action }}"
          echo "url - ${{ github.event.release.url }}"
          echo "assets_url - ${{ github.event.release.assets_url }}"
          echo "id - ${{ github.event.release.id }}"
          echo "tag_name - ${{ github.event.release.tag_name }}"
          echo "assets - ${{ github.event.assets }}"
          echo "assets[0] - ${{ github.event.assets[0] }}"

      - uses: cschleiden/replace-tokens@v1
        with:
          files: '["Dockerfile"]'
        env:
          VERSION: ${{ github.event.release.tag_name }}
          CHAIN: ${{ matrix.chain }}
          NAME: ${{ matrix.name }}
          PORTS: ${{ matrix.ports }}
          ASSEMBLY: ${{ matrix.assembly }}

      - name: Build the Docker container image
        run: docker build -f "Dockerfile" -t blockcore/node-${{ matrix.name }}:latest -t blockcore/node-${{ matrix.name }}:${{ github.event.release.tag_name }} --label "unstable=true" "."

      - name: Login and Push to Docker Registry
        run: |
          docker login -u "sondreb" -p "${{secrets.DockerHubSecret}}"
          docker push blockcore/node-${{ matrix.name }}
